Setup snapshot generated on: Fri 06 Jun 2025 08:05:28 AM PDT
Project path: /home/main/singularity2d

---

$ tree -L 2 -I node_modules -I packages
.
├── env_setup.txt
├── mocha.config.mjs
├── ollama.sh
├── ollama.txt
├── package copy.json
├── package.json
├── pnpm-workspace.yaml
├── privateKey
├── proto
│   └── hypergraph.proto
├── README.md
├── scripts
│   ├── install_coturn.sh
│   ├── install_mosquitto.sh
│   ├── post_install_coturn.sh
│   ├── run.sh
│   └── watch.turn.log.sh
├── setup-submodules.sh
├── src
│   ├── bin
│   ├── client.ts
│   ├── components
│   ├── config.ts
│   ├── key.ts
│   ├── main.ts
│   ├── modelfiles
│   ├── modules
│   └── server.ts
├── test
│   └── example.spec.ts
├── tsconfig.base.json
├── tsconfig.json
├── types
│   ├── global.d.ts
│   └── node-quic.d.ts
└── yarn.lock

10 directories, 27 files

---

$ cat package.json
{
  "name": "singularity2d",
  "version": "0.0.1",
  "description": "",
  "main": "src/main.ts",
  "types": "src/types/global.d.ts",
  "type": "module",
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  },
  "scripts": {
    "start": "node -r tsconfig-paths/register dist/main.js",
    "server": "tsx watch src/main.ts",
    "client": "tsx watch server/client.ts",
    "current": "concurrently -c \"auto\" -p \"{name}-{pid}\" -n \"Server,Dev\" \"npm run server\" \"npm run dev\"",
    "test": "node --import tsx ./node_modules/mocha/bin/mocha \"test/**/*.spec.ts\"",
    "tester": "concurrently -c \"auto\" -p \"{name}-{pid}\" -n \"Server,Client\" \"npm run server\" \"npm run client\"",
    "dev": "tsx watch src/main.ts",
    "build": "tsc",
    "pm2": "pm2 start 'npm run dev' --name=broker2d && pm2 save"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "3d-force-graph": "^1.76.0",
    "@chainsafe/libp2p-gossipsub": "^14.1.1",
    "@chainsafe/libp2p-yamux": "^7.0.1",
    "@fortawesome/fontawesome-free": "^6.7.2",
    "@libp2p/interface-pubsub": "^4.0.1",
    "@ngrok/ngrok": "^1.4.1",
    "axios": "^1.7.9",
    "base64url": "^3.0.1",
    "bcryptjs": "^2.4.3",
    "blockstore-core": "^4.4.1",
    "blockstore-fs": "^1.1.11",
    "blockstore-level": "^1.1.8",
    "body-parser": "^1.20.3",
    "bootstrap": "^5.3.3",
    "cors": "^2.8.5",
    "d3-force-3d": "^3.0.5",
    "datagram-stream": "^1.1.1",
    "datastore-core": "^9.2.9",
    "datastore-fs": "^9.1.9",
    "dotenv": "^16.4.7",
    "easymde": "^2.18.0",
    "ethers": "^6.13.5",
    "express": "^4.21.2",
    "express-sse": "^0.5.3",
    "feed": "^5.1.0",
    "front-matter": "^4.0.2",
    "graphology": "^0.25.4",
    "graphology-types": "^0.24.8",
    "hnsw": "^1.0.3",
    "html5-qrcode": "^2.3.8",
    "interface-blockstore": "^5.3.1",
    "interface-datastore": "^8.3.1",
    "ioredis": "^5.4.2",
    "marked": "^12.0.2",
    "memcached": "^2.2.2",
    "merkletreejs": "^0.4.1",
    "mqtt": "^5.10.3",
    "multer": "1.4.5-lts.1",
    "multiformats": "^13.3.1",
    "ngrok": "5.0.0-beta.2",
    "node-quic": "^0.1.3",
    "ollama": "^0.5.12",
    "openpgp": "^5.11.2",
    "protons": "^7.6.1",
    "qrcode": "^1.5.4",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "three": "^0.166.1",
    "three-spritetext": "^1.9.4",
    "tsconfig-paths": "^4.2.0",
    "vite-tsconfig-paths": "^5.1.4",
    "wink-eng-lite-web-model": "^1.8.1",
    "wink-nlp": "^2.3.2",
    "ws": "^8.18.0"
  },
  "devDependencies": {
    "@types/base64url": "^2.0.7",
    "@types/cors": "^2.8.17",
    "@types/d3-force": "^3.0.10",
    "@types/dotenv": "^8.2.3",
    "@types/express": "^4.17.21",
    "@types/jest": "^27.5.2",
    "@types/live-server": "^1.2.3",
    "@types/memcached": "^2.2.10",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.17.16",
    "@types/qrcode": "^1.5.5",
    "@types/three": "^0.166.0",
    "@types/ws": "^8.5.14",
    "babel-cli": "^6.26.0",
    "babel-preset-react-app": "^3.1.2",
    "eslint": "^8.57.1",
    "live-server": "^1.2.2",
    "ts-jest": "^28.0.8",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "^5.8.3",
    "typescript-node": "^0.1.3",
    "vite": "^6.0.11"
  },
  "optionalDependencies": {
    "@helia/unixfs": "^5.0.2",
    "@types/jsdom": "^21.1.7",
    "@types/offscreen-canvas": "^0.1.5",
    "@types/query-selector-shadow-dom": "^1.0.4",
    "canvas": "^2.11.2",
    "helia": "^5.0.0",
    "jsdom": "^25.0.1",
    "nat-upnp": "^1.1.1",
    "offscreen-canvas": "^0.1.1",
    "prop-types": "^15.8.1",
    "upnp-client": "^0.0.1"
  }
}
---

$ cat tsconfig.json
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    "rootDir": "src",
    // "outDir": "./dist/relay", // Directory to output compiled files
    "target": "ES2020",
    "module": "CommonJS", // Retaining CommonJS for server-side
    // "target": "ESNext", // Target modern JavaScript features (Node.js 16+)
    // "module": "ESNext", // Use ES Modules (modern Node.js supports this)
    "moduleResolution": "node", // Use Node.js module resolution
    "outDir": "./dist", // Compiled output folder
    // "strict": true, // Enable strict type-checking options
    "esModuleInterop": true, // Compatibility with CommonJS modules
    "skipLibCheck": true, // Skip type checking for declaration files
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true, // Enables importing JSON files
    "allowSyntheticDefaultImports": true, // Supports default imports from CommonJS modules
    "sourceMap": true, // Include source maps for debugging
    "noImplicitAny": null
  },
  "include": ["src/**/*","test/**/*"], // Files to include
  "exclude": ["node_modules","scripts","packages","dist"] // Exclude these folders
}

---

$ cat tsconfig.base.json
{
    "compilerOptions": {
      "strict": true,
      "strictNullChecks": true,
      "esModuleInterop": true,
      "emitDecoratorMetadata": true,
      "experimentalDecorators": true,
      "noUnusedLocals": true,
      "skipLibCheck": true,
      "sourceMap": true,
      "jsx": "react-jsx",
      "moduleResolution": "node"
    }
  }
---

$ cat mocha.config.mjs
export default {
  extension: ['ts'],
  spec: 'test/**/*.spec.ts',
  require: ['ts-node/register'],
  timeout: 5000
}

---

$ cat .vscode/launch.json
{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "Launch Singularity2d",
      "runtimeExecutable": "tsx",
      "runtimeArgs": ["watch", "src/main.ts"],
      "cwd": "${workspaceFolder}",
      "skipFiles": ["<node_internals>/**"]
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Debug Mocha Tests",
      "runtimeExecutable": "node",
      "runtimeArgs": [
        "--import",
        "tsx",
        "${workspaceFolder}/node_modules/mocha/bin/mocha"
      ],
      "args": ["test/**/*.spec.ts"],
      "cwd": "${workspaceFolder}",
      "internalConsoleOptions": "openOnSessionStart",
      "skipFiles": ["<node_internals>/**"],
      "console": "integratedTerminal"
    }
  ]
}

---

Sample test files (first 20 lines of up to 3 specs):
File: test/example.spec.ts
import { strict as assert } from 'assert';

describe('Math', () => {
  it('adds numbers', () => {
    assert.equal(1 + 2, 3);
  });
});

---

