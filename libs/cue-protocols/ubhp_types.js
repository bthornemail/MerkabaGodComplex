/**
 * SExprType Enumeration for Canonical Encoding.
 * Defines the types of S-expressions for canonical binary serialization.
 * These types are fundamental for representing all data and executable logic
 * within the CUE as ArrayBuffers. This is the "word domain".
 */
export var SExprType;
(function (SExprType) {
    SExprType[SExprType["NULL"] = 0] = "NULL";
    SExprType[SExprType["BOOL"] = 1] = "BOOL";
    SExprType[SExprType["INT32"] = 2] = "INT32";
    SExprType[SExprType["FLOAT64"] = 5] = "FLOAT64";
    SExprType[SExprType["STRING"] = 6] = "STRING";
    SExprType[SExprType["SYMBOL"] = 7] = "SYMBOL";
    SExprType[SExprType["LIST"] = 8] = "LIST";
    SExprType[SExprType["REFERENCE"] = 10] = "REFERENCE";
})(SExprType || (SExprType = {}));
/**
 * Represents a Harmonic Vector, a numerical signature derived from an
 * ArrayBuffer S-expression. This enables perceptual content addressing and
 * geometric analysis. It embodies the "point domain" transformation of binary
 * data ("word domain").
 */
export class HarmonicVector {
}
/**
 * Represents a Rectification Proof, generated by the CAR consensus mechanism.
 * It cryptographically links a new event to an older event it has rectified,
 * providing a verifiable proof of continuous ledger coherence.
 * It includes a signature for verifiability and an expiration timestamp to
 * prevent the use of stale proofs.
 */
export class RectificationProof {
}
/**
 * Payload for a REVOKE_PROOF event.
 * Signals that a previously issued RectificationProof is now considered invalid,
 * allowing the network to self-correct.
 */
export class RevocationPayload {
}
